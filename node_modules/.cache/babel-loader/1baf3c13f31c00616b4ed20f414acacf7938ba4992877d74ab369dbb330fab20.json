{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlexanDoor\\\\WebstormProjects\\\\shittest\\\\my-app\\\\src\\\\App.tsx\";\nimport React, { Component } from 'react';\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      uploadedImages: []\n    };\n    this._uploadImageCallBack = this._uploadImageCallBack.bind(this);\n  }\n  _uploadImageCallBack(file) {\n    // long story short, every time we upload an image, we\n    // need to save it to the state so we can get it's data\n    // later when we decide what to do with it.\n\n    // Make sure you have a uploadImages: [] as your default state\n    // @ts-ignore\n    let uploadedImages = this.state.uploadedImages;\n    const imageObject = {\n      file: file,\n      localSrc: URL.createObjectURL(file)\n    };\n    uploadedImages.push(imageObject);\n    this.setState({\n      uploadedImages: uploadedImages\n    });\n\n    // We need to return a promise with the image src\n    // the img src we will use here will be what's needed\n    // to preview it in the browser. This will be different than what\n    // we will see in the index.md file we generate.\n    return new Promise((resolve, reject) => {\n      resolve({\n        data: {\n          link: imageObject.localSrc\n        }\n      });\n    });\n  }\n  render() {\n    // @ts-ignore\n    const {\n      editorState\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          editorState: editorState,\n          toolbarClassName: \"toolbarClassName\",\n          wrapperClassName: \"wrapperClassName\",\n          editorClassName: \"editorClassName\",\n          onEditorStateChange: this.onEditorStateChange,\n          toolbar: {\n            inline: {\n              inDropdown: true\n            },\n            list: {\n              inDropdown: true\n            },\n            textAlign: {\n              inDropdown: true\n            },\n            link: {\n              inDropdown: true\n            },\n            history: {\n              inDropdown: true\n            },\n            image: {\n              uploadCallback: this._uploadImageCallBack\n            },\n            inputAccept: 'application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","EditorState","Editor","jsxDEV","_jsxDEV","App","constructor","props","onEditorStateChange","editorState","setState","state","createEmpty","uploadedImages","_uploadImageCallBack","bind","file","imageObject","localSrc","URL","createObjectURL","push","Promise","resolve","reject","data","link","render","className","children","toolbarClassName","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","textAlign","history","image","uploadCallback","inputAccept","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/AlexanDoor/WebstormProjects/shittest/my-app/src/App.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nclass App extends Component {\n\n    constructor(props: {} | Readonly<{}>) {\n        super(props);\n        this.state = {\n            editorState: EditorState.createEmpty(),\n            uploadedImages: []\n        };\n        this._uploadImageCallBack = this._uploadImageCallBack.bind(this);\n    }\n\n    onEditorStateChange = (editorState: any) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n\n    _uploadImageCallBack(file: Blob | MediaSource) {\n        // long story short, every time we upload an image, we\n        // need to save it to the state so we can get it's data\n        // later when we decide what to do with it.\n\n        // Make sure you have a uploadImages: [] as your default state\n        // @ts-ignore\n        let uploadedImages = this.state.uploadedImages;\n\n        const imageObject = {\n            file: file,\n            localSrc: URL.createObjectURL(file),\n        }\n\n        uploadedImages.push(imageObject);\n\n        this.setState({ uploadedImages: uploadedImages })\n\n        // We need to return a promise with the image src\n        // the img src we will use here will be what's needed\n        // to preview it in the browser. This will be different than what\n        // we will see in the index.md file we generate.\n        return new Promise(\n            (resolve, reject) => {\n                resolve({ data: { link: imageObject.localSrc } });\n            }\n        );\n    }\n    render() {\n        // @ts-ignore\n        const { editorState } = this.state;\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n\n                    <Editor\n                        editorState={editorState}\n                        toolbarClassName=\"toolbarClassName\"\n                        wrapperClassName=\"wrapperClassName\"\n                        editorClassName=\"editorClassName\"\n                        onEditorStateChange={this.onEditorStateChange}\n                        toolbar={{\n                            inline: { inDropdown: true },\n                            list: { inDropdown: true },\n                            textAlign: { inDropdown: true },\n                            link: { inDropdown: true },\n                            history: { inDropdown: true },\n                            image: { uploadCallback: this._uploadImageCallBack },\n                            inputAccept: 'application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\n                        }}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAGxC,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAO,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1D,MAAMC,GAAG,SAASL,SAAS,CAAC;EAExBM,WAAWA,CAACC,KAAwB,EAAE;IAClC,KAAK,CAACA,KAAK,CAAC;IAAC,KAQjBC,mBAAmB,GAAIC,WAAgB,IAAK;MACxC,IAAI,CAACC,QAAQ,CAAC;QACVD;MACJ,CAAC,CAAC;IACN,CAAC;IAXG,IAAI,CAACE,KAAK,GAAG;MACTF,WAAW,EAAER,WAAW,CAACW,WAAW,EAAE;MACtCC,cAAc,EAAE;IACpB,CAAC;IACD,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAAC;EACpE;EASAD,oBAAoBA,CAACE,IAAwB,EAAE;IAC3C;IACA;IACA;;IAEA;IACA;IACA,IAAIH,cAAc,GAAG,IAAI,CAACF,KAAK,CAACE,cAAc;IAE9C,MAAMI,WAAW,GAAG;MAChBD,IAAI,EAAEA,IAAI;MACVE,QAAQ,EAAEC,GAAG,CAACC,eAAe,CAACJ,IAAI;IACtC,CAAC;IAEDH,cAAc,CAACQ,IAAI,CAACJ,WAAW,CAAC;IAEhC,IAAI,CAACP,QAAQ,CAAC;MAAEG,cAAc,EAAEA;IAAe,CAAC,CAAC;;IAEjD;IACA;IACA;IACA;IACA,OAAO,IAAIS,OAAO,CACd,CAACC,OAAO,EAAEC,MAAM,KAAK;MACjBD,OAAO,CAAC;QAAEE,IAAI,EAAE;UAAEC,IAAI,EAAET,WAAW,CAACC;QAAS;MAAE,CAAC,CAAC;IACrD,CAAC,CACJ;EACL;EACAS,MAAMA,CAAA,EAAG;IACL;IACA,MAAM;MAAElB;IAAY,CAAC,GAAG,IAAI,CAACE,KAAK;IAClC,oBACIP,OAAA;MAAKwB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBzB,OAAA;QAAQwB,SAAS,EAAC,YAAY;QAAAC,QAAA,eAE1BzB,OAAA,CAACF,MAAM;UACHO,WAAW,EAAEA,WAAY;UACzBqB,gBAAgB,EAAC,kBAAkB;UACnCC,gBAAgB,EAAC,kBAAkB;UACnCC,eAAe,EAAC,iBAAiB;UACjCxB,mBAAmB,EAAE,IAAI,CAACA,mBAAoB;UAC9CyB,OAAO,EAAE;YACLC,MAAM,EAAE;cAAEC,UAAU,EAAE;YAAK,CAAC;YAC5BC,IAAI,EAAE;cAAED,UAAU,EAAE;YAAK,CAAC;YAC1BE,SAAS,EAAE;cAAEF,UAAU,EAAE;YAAK,CAAC;YAC/BT,IAAI,EAAE;cAAES,UAAU,EAAE;YAAK,CAAC;YAC1BG,OAAO,EAAE;cAAEH,UAAU,EAAE;YAAK,CAAC;YAC7BI,KAAK,EAAE;cAAEC,cAAc,EAAE,IAAI,CAAC1B;YAAqB,CAAC;YACpD2B,WAAW,EAAE;UACjB;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAEd;AACJ;AAEA,eAAexC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}