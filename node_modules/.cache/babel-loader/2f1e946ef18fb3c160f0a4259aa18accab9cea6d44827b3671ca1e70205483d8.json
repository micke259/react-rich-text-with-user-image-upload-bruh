{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlexanDoor\\\\WebstormProjects\\\\shittest\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { ContentState, convertToRaw, EditorState } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createWithContent(ContentState.createFromBlockArray(c)));\n  const [content, setContent] = useState('');\n  return /*#__PURE__*/_jsxDEV(Editor, {\n    toolbarClassName: \"toolbarClassName\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"editorClassName\",\n    editorState: editorState,\n    placeholder: \"\\u041F\\u0438\\u0448\\u0443 \\u0445\\u0443\\u0439\\u043D\\u044E \\u043D\\u0430 \\u0441\\u0442\\u044D\\u043A\\u0435 PIDOR\",\n    onEditorStateChange: newState => {\n      setEditorState(newState);\n      setContent(draftToHtml(convertToRaw(newState.getCurrentContent())));\n    },\n    toolbar: {\n      options: ['inline', 'blockType', 'fontSize', 'list', 'textAlign', 'history', 'embedded', 'emoji', 'image'],\n      inline: {\n        isDropdown: true\n      },\n      list: {\n        isDropdown: true\n      },\n      textAlign: {\n        isDropdown: true\n      },\n      link: {\n        isDropdown: true\n      },\n      history: {\n        isDropdown: true\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iWjKEWt/+k6OzvGgS0CEEG6bWi0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Editor","ContentState","convertToRaw","EditorState","draftToHtml","jsxDEV","_jsxDEV","App","_s","editorState","setEditorState","createWithContent","createFromBlockArray","c","content","setContent","toolbarClassName","wrapperClassName","editorClassName","placeholder","onEditorStateChange","newState","getCurrentContent","toolbar","options","inline","isDropdown","list","textAlign","link","history","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AlexanDoor/WebstormProjects/shittest/my-app/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nimport {Editor} from \"react-draft-wysiwyg\";\nimport {ContentState, convertToRaw, EditorState} from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nconst App = () => {\n\n    const [editorState, setEditorState] = useState<EditorState>(EditorState.createWithContent(ContentState.createFromBlockArray(c)))\n    const [content, setContent] = useState<string>('')\n    return (\n        <Editor\n            toolbarClassName=\"toolbarClassName\"\n            wrapperClassName=\"wrapperClassName\"\n            editorClassName=\"editorClassName\"\n            editorState={editorState}\n            placeholder=\"Пишу хуйню на стэке PIDOR\"\n            onEditorStateChange={newState=>{\n                setEditorState(newState)\n                setContent(draftToHtml(convertToRaw(newState.getCurrentContent())))\n            }}\n            toolbar={{\n                options:['inline','blockType','fontSize','list', 'textAlign', 'history', 'embedded', 'emoji', 'image'],\n                inline:{isDropdown:true},\n                list:{isDropdown:true},\n                textAlign:{isDropdown:true},\n                link:{isDropdown:true},\n                history:{isDropdown:true}\n            }}\n        />\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAElB,SAAQC,MAAM,QAAO,qBAAqB;AAC1C,SAAQC,YAAY,EAAEC,YAAY,EAAEC,WAAW,QAAO,UAAU;AAChE,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAO,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAcI,WAAW,CAACQ,iBAAiB,CAACV,YAAY,CAACW,oBAAoB,CAACC,CAAC,CAAC,CAAC,CAAC;EAChI,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EAClD,oBACIO,OAAA,CAACN,MAAM;IACHgB,gBAAgB,EAAC,kBAAkB;IACnCC,gBAAgB,EAAC,kBAAkB;IACnCC,eAAe,EAAC,iBAAiB;IACjCT,WAAW,EAAEA,WAAY;IACzBU,WAAW,EAAC,2GAA2B;IACvCC,mBAAmB,EAAEC,QAAQ,IAAE;MAC3BX,cAAc,CAACW,QAAQ,CAAC;MACxBN,UAAU,CAACX,WAAW,CAACF,YAAY,CAACmB,QAAQ,CAACC,iBAAiB,EAAE,CAAC,CAAC,CAAC;IACvE,CAAE;IACFC,OAAO,EAAE;MACLC,OAAO,EAAC,CAAC,QAAQ,EAAC,WAAW,EAAC,UAAU,EAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;MACtGC,MAAM,EAAC;QAACC,UAAU,EAAC;MAAI,CAAC;MACxBC,IAAI,EAAC;QAACD,UAAU,EAAC;MAAI,CAAC;MACtBE,SAAS,EAAC;QAACF,UAAU,EAAC;MAAI,CAAC;MAC3BG,IAAI,EAAC;QAACH,UAAU,EAAC;MAAI,CAAC;MACtBI,OAAO,EAAC;QAACJ,UAAU,EAAC;MAAI;IAC5B;EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAC1B,EAAA,CAzBID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}